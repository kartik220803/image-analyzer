{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\karti\\\\OneDrive\\\\Desktop\\\\Web D Try\\\\c++ oops\\\\imagga-analyzer\\\\frontend\\\\src\\\\App.js\";\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './App.css';\nfunction App() {\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [preview, setPreview] = useState(null);\n  const [tags, setTags] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const handleFileSelect = event => {\n    const file = event.target.files[0];\n    setSelectedFile(file);\n\n    // Create preview\n    if (file) {\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        setPreview(reader.result);\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n  const handleUpload = async () => {\n    if (!selectedFile) {\n      setError('Please select an image first');\n      return;\n    }\n    setLoading(true);\n    setError(null);\n    const formData = new FormData();\n    formData.append('image', selectedFile);\n    try {\n      const response = await axios.post('http://localhost:5000/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      console.log('Response from server:', response.data);\n      if (!response.data) {\n        throw new Error('No data received from server');\n      }\n\n      // Check if response.data is already an array\n      if (Array.isArray(response.data)) {\n        setTags(response.data.map(tag => ({\n          name: tag.tag.en,\n          confidence: Math.round(tag.confidence)\n        })).sort((a, b) => b.confidence - a.confidence));\n      }\n      // If it's a string, parse it\n      else if (typeof response.data === 'string') {\n        // Split the response string into individual tag entries\n        const tagList = response.data.split(/[()]\\s*/).filter(Boolean);\n        console.log('Parsed tag list:', tagList);\n        const parsedTags = [];\n\n        // Process pairs of tags and percentages\n        for (let i = 0; i < tagList.length; i += 2) {\n          if (tagList[i + 1]) {\n            parsedTags.push({\n              name: tagList[i].trim(),\n              confidence: parseInt(tagList[i + 1])\n            });\n          }\n        }\n        console.log('Final parsed tags:', parsedTags);\n\n        // Sort tags by confidence\n        parsedTags.sort((a, b) => b.confidence - a.confidence);\n        setTags(parsedTags);\n      }\n      // If it's an object with tags property\n      else if (response.data.tags) {\n        setTags(response.data.tags.map(tag => ({\n          name: tag.tag.en,\n          confidence: Math.round(tag.confidence)\n        })).sort((a, b) => b.confidence - a.confidence));\n      } else {\n        throw new Error('Unexpected response format from server');\n      }\n    } catch (err) {\n      console.error('Full error details:', err);\n      setError('Failed to analyze image. Please try again. Error: ' + err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container mx-auto p-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"text-3xl font-bold mb-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }, \"Image Analysis\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    onChange: handleFileSelect,\n    accept: \"image/*\",\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }), preview && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: preview,\n    alt: \"Preview\",\n    className: \"max-w-md rounded-lg shadow-lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleUpload,\n    disabled: !selectedFile || loading,\n    className: `px-4 py-2 rounded-lg ${!selectedFile || loading ? 'bg-gray-300 cursor-not-allowed' : 'bg-blue-500 hover:bg-blue-600 text-white'}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }, loading ? 'Analyzing...' : 'Analyze Image')), error && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-red-500 mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }\n  }, error), tags.length > 0 && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"text-xl font-semibold mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 11\n    }\n  }, \"Analysis Results\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 11\n    }\n  }, tags.map((tag, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    className: \"bg-gray-100 p-2 rounded-lg flex justify-between items-center\",\n    style: {\n      opacity: Math.max(0.5, tag.confidence / 100)\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"font-medium\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 17\n    }\n  }, tag.name), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-sm text-gray-600\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 17\n    }\n  }, tag.confidence, \"%\"))))));\n}\nexport default App;","map":{"version":3,"names":["React","useState","axios","App","selectedFile","setSelectedFile","preview","setPreview","tags","setTags","loading","setLoading","error","setError","handleFileSelect","event","file","target","files","reader","FileReader","onloadend","result","readAsDataURL","handleUpload","formData","FormData","append","response","post","headers","console","log","data","Error","Array","isArray","map","tag","name","en","confidence","Math","round","sort","a","b","tagList","split","filter","Boolean","parsedTags","i","length","push","trim","parseInt","err","message","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","accept","src","alt","onClick","disabled","index","key","style","opacity","max"],"sources":["C:/Users/karti/OneDrive/Desktop/Web D Try/c++ oops/imagga-analyzer/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport './App.css';\n\nfunction App() {\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [preview, setPreview] = useState(null);\n  const [tags, setTags] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const handleFileSelect = (event) => {\n    const file = event.target.files[0];\n    setSelectedFile(file);\n    \n    // Create preview\n    if (file) {\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        setPreview(reader.result);\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n\n  const handleUpload = async () => {\n    if (!selectedFile) {\n      setError('Please select an image first');\n      return;\n    }\n\n    setLoading(true);\n    setError(null);\n    \n    const formData = new FormData();\n    formData.append('image', selectedFile);\n\n    try {\n      const response = await axios.post('http://localhost:5000/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n      });\n\n      console.log('Response from server:', response.data);\n\n      if (!response.data) {\n        throw new Error('No data received from server');\n      }\n\n      // Check if response.data is already an array\n      if (Array.isArray(response.data)) {\n        setTags(response.data.map(tag => ({\n          name: tag.tag.en,\n          confidence: Math.round(tag.confidence)\n        })).sort((a, b) => b.confidence - a.confidence));\n      } \n      // If it's a string, parse it\n      else if (typeof response.data === 'string') {\n        // Split the response string into individual tag entries\n        const tagList = response.data.split(/[()]\\s*/).filter(Boolean);\n        console.log('Parsed tag list:', tagList);\n\n        const parsedTags = [];\n        \n        // Process pairs of tags and percentages\n        for (let i = 0; i < tagList.length; i += 2) {\n          if (tagList[i + 1]) {\n            parsedTags.push({\n              name: tagList[i].trim(),\n              confidence: parseInt(tagList[i + 1])\n            });\n          }\n        }\n        \n        console.log('Final parsed tags:', parsedTags);\n        \n        // Sort tags by confidence\n        parsedTags.sort((a, b) => b.confidence - a.confidence);\n        setTags(parsedTags);\n      }\n      // If it's an object with tags property\n      else if (response.data.tags) {\n        setTags(response.data.tags.map(tag => ({\n          name: tag.tag.en,\n          confidence: Math.round(tag.confidence)\n        })).sort((a, b) => b.confidence - a.confidence));\n      }\n      else {\n        throw new Error('Unexpected response format from server');\n      }\n    } catch (err) {\n      console.error('Full error details:', err);\n      setError('Failed to analyze image. Please try again. Error: ' + err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"container mx-auto p-4\">\n      <h1 className=\"text-3xl font-bold mb-6\">Image Analysis</h1>\n      \n      <div className=\"mb-6\">\n        <input\n          type=\"file\"\n          onChange={handleFileSelect}\n          accept=\"image/*\"\n          className=\"mb-4\"\n        />\n        \n        {preview && (\n          <div className=\"mb-4\">\n            <img src={preview} alt=\"Preview\" className=\"max-w-md rounded-lg shadow-lg\" />\n          </div>\n        )}\n        \n        <button\n          onClick={handleUpload}\n          disabled={!selectedFile || loading}\n          className={`px-4 py-2 rounded-lg ${\n            !selectedFile || loading\n              ? 'bg-gray-300 cursor-not-allowed'\n              : 'bg-blue-500 hover:bg-blue-600 text-white'\n          }`}\n        >\n          {loading ? 'Analyzing...' : 'Analyze Image'}\n        </button>\n      </div>\n\n      {error && (\n        <div className=\"text-red-500 mb-4\">{error}</div>\n      )}\n\n      {tags.length > 0 && (\n        <div>\n          <h2 className=\"text-xl font-semibold mb-4\">Analysis Results</h2>\n          <div className=\"grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-2\">\n            {tags.map((tag, index) => (\n              <div \n                key={index}\n                className=\"bg-gray-100 p-2 rounded-lg flex justify-between items-center\"\n                style={{\n                  opacity: Math.max(0.5, tag.confidence / 100)\n                }}\n              >\n                <span className=\"font-medium\">{tag.name}</span>\n                <span className=\"text-sm text-gray-600\">{tag.confidence}%</span>\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}