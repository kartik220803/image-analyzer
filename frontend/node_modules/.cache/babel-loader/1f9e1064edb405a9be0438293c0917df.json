{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\karti\\\\OneDrive\\\\Desktop\\\\Web D Try\\\\c++ oops\\\\imagga-analyzer\\\\frontend\\\\src\\\\App.js\";\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './App.css';\nfunction App() {\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [preview, setPreview] = useState(null);\n  const [tags, setTags] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const handleFileSelect = event => {\n    const file = event.target.files[0];\n    setSelectedFile(file);\n\n    // Create preview\n    if (file) {\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        setPreview(reader.result);\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n  const handleUpload = async () => {\n    if (!selectedFile) {\n      setError('Please select an image first');\n      return;\n    }\n    setLoading(true);\n    setError(null);\n    const formData = new FormData();\n    formData.append('image', selectedFile);\n    try {\n      const response = await axios.post('http://localhost:5000/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      console.log('Response from server:', response.data);\n      console.log('Response type:', typeof response.data);\n      console.log('Response structure:', {\n        hasResult: 'result' in response.data,\n        hasTags: response.data.result ? 'tags' in response.data.result : false\n      });\n\n      // If response.data is a string, try parsing it\n      if (typeof response.data === 'string') {\n        try {\n          const parsedData = JSON.parse(response.data);\n          console.log('Parsed string data:', parsedData);\n          response.data = parsedData;\n        } catch (e) {\n          console.log('Could not parse response as JSON');\n        }\n      }\n      if (!response.data || !response.data.result || !response.data.result.tags) {\n        console.log('Invalid response structure. Expected: { result: { tags: [...] } }');\n        console.log('Received:', response.data);\n        throw new Error('Invalid response format from server');\n      }\n      const parsedTags = response.data.result.tags.map(tag => ({\n        name: tag.tag.en,\n        confidence: Math.round(tag.confidence)\n      }));\n\n      // Sort tags by confidence\n      parsedTags.sort((a, b) => b.confidence - a.confidence);\n      setTags(parsedTags);\n    } catch (err) {\n      console.error('Full error details:', err);\n      if (err.response) {\n        console.log('Error response:', err.response.data);\n        setError('Server error: ' + JSON.stringify(err.response.data));\n      } else {\n        setError('Failed to analyze image. Please try again. Error: ' + err.message);\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container mx-auto p-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"text-3xl font-bold mb-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, \"Image Analysis\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    onChange: handleFileSelect,\n    accept: \"image/*\",\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }), preview && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: preview,\n    alt: \"Preview\",\n    className: \"max-w-md rounded-lg shadow-lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleUpload,\n    disabled: !selectedFile || loading,\n    className: `px-4 py-2 rounded-lg ${!selectedFile || loading ? 'bg-gray-300 cursor-not-allowed' : 'bg-blue-500 hover:bg-blue-600 text-white'}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }, loading ? 'Analyzing...' : 'Analyze Image')), error && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-red-500 mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  }, error), tags.length > 0 && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"text-xl font-semibold mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 11\n    }\n  }, \"Analysis Results\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 11\n    }\n  }, tags.map((tag, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    className: \"bg-gray-100 p-2 rounded-lg flex justify-between items-center\",\n    style: {\n      opacity: Math.max(0.5, tag.confidence / 100)\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"font-medium\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 17\n    }\n  }, tag.name), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-sm text-gray-600\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 17\n    }\n  }, tag.confidence, \"%\"))))));\n}\nexport default App;","map":{"version":3,"names":["React","useState","axios","App","selectedFile","setSelectedFile","preview","setPreview","tags","setTags","loading","setLoading","error","setError","handleFileSelect","event","file","target","files","reader","FileReader","onloadend","result","readAsDataURL","handleUpload","formData","FormData","append","response","post","headers","console","log","data","hasResult","hasTags","parsedData","JSON","parse","e","Error","parsedTags","map","tag","name","en","confidence","Math","round","sort","a","b","err","stringify","message","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","accept","src","alt","onClick","disabled","length","index","key","style","opacity","max"],"sources":["C:/Users/karti/OneDrive/Desktop/Web D Try/c++ oops/imagga-analyzer/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport './App.css';\n\nfunction App() {\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [preview, setPreview] = useState(null);\n  const [tags, setTags] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const handleFileSelect = (event) => {\n    const file = event.target.files[0];\n    setSelectedFile(file);\n    \n    // Create preview\n    if (file) {\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        setPreview(reader.result);\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n\n  const handleUpload = async () => {\n    if (!selectedFile) {\n      setError('Please select an image first');\n      return;\n    }\n\n    setLoading(true);\n    setError(null);\n    \n    const formData = new FormData();\n    formData.append('image', selectedFile);\n\n    try {\n      const response = await axios.post('http://localhost:5000/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n      });\n\n      console.log('Response from server:', response.data);\n      console.log('Response type:', typeof response.data);\n      console.log('Response structure:', {\n        hasResult: 'result' in response.data,\n        hasTags: response.data.result ? 'tags' in response.data.result : false\n      });\n\n      // If response.data is a string, try parsing it\n      if (typeof response.data === 'string') {\n        try {\n          const parsedData = JSON.parse(response.data);\n          console.log('Parsed string data:', parsedData);\n          response.data = parsedData;\n        } catch (e) {\n          console.log('Could not parse response as JSON');\n        }\n      }\n\n      if (!response.data || !response.data.result || !response.data.result.tags) {\n        console.log('Invalid response structure. Expected: { result: { tags: [...] } }');\n        console.log('Received:', response.data);\n        throw new Error('Invalid response format from server');\n      }\n\n      const parsedTags = response.data.result.tags.map(tag => ({\n        name: tag.tag.en,\n        confidence: Math.round(tag.confidence)\n      }));\n\n      // Sort tags by confidence\n      parsedTags.sort((a, b) => b.confidence - a.confidence);\n      setTags(parsedTags);\n    } catch (err) {\n      console.error('Full error details:', err);\n      if (err.response) {\n        console.log('Error response:', err.response.data);\n        setError('Server error: ' + JSON.stringify(err.response.data));\n      } else {\n        setError('Failed to analyze image. Please try again. Error: ' + err.message);\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"container mx-auto p-4\">\n      <h1 className=\"text-3xl font-bold mb-6\">Image Analysis</h1>\n      \n      <div className=\"mb-6\">\n        <input\n          type=\"file\"\n          onChange={handleFileSelect}\n          accept=\"image/*\"\n          className=\"mb-4\"\n        />\n        \n        {preview && (\n          <div className=\"mb-4\">\n            <img src={preview} alt=\"Preview\" className=\"max-w-md rounded-lg shadow-lg\" />\n          </div>\n        )}\n        \n        <button\n          onClick={handleUpload}\n          disabled={!selectedFile || loading}\n          className={`px-4 py-2 rounded-lg ${\n            !selectedFile || loading\n              ? 'bg-gray-300 cursor-not-allowed'\n              : 'bg-blue-500 hover:bg-blue-600 text-white'\n          }`}\n        >\n          {loading ? 'Analyzing...' : 'Analyze Image'}\n        </button>\n      </div>\n\n      {error && (\n        <div className=\"text-red-500 mb-4\">{error}</div>\n      )}\n\n      {tags.length > 0 && (\n        <div>\n          <h2 className=\"text-xl font-semibold mb-4\">Analysis Results</h2>\n          <div className=\"grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-2\">\n            {tags.map((tag, index) => (\n              <div \n                key={index}\n                className=\"bg-gray-100 p-2 rounded-lg flex justify-between items-center\"\n                style={{\n                  opacity: Math.max(0.5, tag.confidence / 100)\n                }}\n              >\n                <span className=\"font-medium\">{tag.name}</span>\n                <span className=\"text-sm text-gray-600\">{tag.confidence}%</span>\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,WAAW;AAElB,SAASC,GAAGA,CAAA,EAAG;EACb,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGJ,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACK,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACO,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMa,gBAAgB,GAAIC,KAAK,IAAK;IAClC,MAAMC,IAAI,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAClCb,eAAe,CAACW,IAAI,CAAC;;IAErB;IACA,IAAIA,IAAI,EAAE;MACR,MAAMG,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;MAC/BD,MAAM,CAACE,SAAS,GAAG,MAAM;QACvBd,UAAU,CAACY,MAAM,CAACG,MAAM,CAAC;MAC3B,CAAC;MACDH,MAAM,CAACI,aAAa,CAACP,IAAI,CAAC;IAC5B;EACF,CAAC;EAED,MAAMQ,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI,CAACpB,YAAY,EAAE;MACjBS,QAAQ,CAAC,8BAA8B,CAAC;MACxC;IACF;IAEAF,UAAU,CAAC,IAAI,CAAC;IAChBE,QAAQ,CAAC,IAAI,CAAC;IAEd,MAAMY,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEvB,YAAY,CAAC;IAEtC,IAAI;MACF,MAAMwB,QAAQ,GAAG,MAAM1B,KAAK,CAAC2B,IAAI,CAAC,8BAA8B,EAAEJ,QAAQ,EAAE;QAC1EK,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CAAC,CAAC;MAEFC,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEJ,QAAQ,CAACK,IAAI,CAAC;MACnDF,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAE,OAAOJ,QAAQ,CAACK,IAAI,CAAC;MACnDF,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAE;QACjCE,SAAS,EAAE,QAAQ,IAAIN,QAAQ,CAACK,IAAI;QACpCE,OAAO,EAAEP,QAAQ,CAACK,IAAI,CAACX,MAAM,GAAG,MAAM,IAAIM,QAAQ,CAACK,IAAI,CAACX,MAAM,GAAG;MACnE,CAAC,CAAC;;MAEF;MACA,IAAI,OAAOM,QAAQ,CAACK,IAAI,KAAK,QAAQ,EAAE;QACrC,IAAI;UACF,MAAMG,UAAU,GAAGC,IAAI,CAACC,KAAK,CAACV,QAAQ,CAACK,IAAI,CAAC;UAC5CF,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEI,UAAU,CAAC;UAC9CR,QAAQ,CAACK,IAAI,GAAGG,UAAU;QAC5B,CAAC,CAAC,OAAOG,CAAC,EAAE;UACVR,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAC;QACjD;MACF;MAEA,IAAI,CAACJ,QAAQ,CAACK,IAAI,IAAI,CAACL,QAAQ,CAACK,IAAI,CAACX,MAAM,IAAI,CAACM,QAAQ,CAACK,IAAI,CAACX,MAAM,CAACd,IAAI,EAAE;QACzEuB,OAAO,CAACC,GAAG,CAAC,mEAAmE,CAAC;QAChFD,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEJ,QAAQ,CAACK,IAAI,CAAC;QACvC,MAAM,IAAIO,KAAK,CAAC,qCAAqC,CAAC;MACxD;MAEA,MAAMC,UAAU,GAAGb,QAAQ,CAACK,IAAI,CAACX,MAAM,CAACd,IAAI,CAACkC,GAAG,CAACC,GAAG,KAAK;QACvDC,IAAI,EAAED,GAAG,CAACA,GAAG,CAACE,EAAE;QAChBC,UAAU,EAAEC,IAAI,CAACC,KAAK,CAACL,GAAG,CAACG,UAAU;MACvC,CAAC,CAAC,CAAC;;MAEH;MACAL,UAAU,CAACQ,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAACL,UAAU,GAAGI,CAAC,CAACJ,UAAU,CAAC;MACtDrC,OAAO,CAACgC,UAAU,CAAC;IACrB,CAAC,CAAC,OAAOW,GAAG,EAAE;MACZrB,OAAO,CAACnB,KAAK,CAAC,qBAAqB,EAAEwC,GAAG,CAAC;MACzC,IAAIA,GAAG,CAACxB,QAAQ,EAAE;QAChBG,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEoB,GAAG,CAACxB,QAAQ,CAACK,IAAI,CAAC;QACjDpB,QAAQ,CAAC,gBAAgB,GAAGwB,IAAI,CAACgB,SAAS,CAACD,GAAG,CAACxB,QAAQ,CAACK,IAAI,CAAC,CAAC;MAChE,CAAC,MAAM;QACLpB,QAAQ,CAAC,oDAAoD,GAAGuC,GAAG,CAACE,OAAO,CAAC;MAC9E;IACF,CAAC,SAAS;MACR3C,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,oBACEX,KAAA,CAAAuD,aAAA;IAAKC,SAAS,EAAC,uBAAuB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACpC9D,KAAA,CAAAuD,aAAA;IAAIC,SAAS,EAAC,yBAAyB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,gBAAkB,CAAC,eAE3D9D,KAAA,CAAAuD,aAAA;IAAKC,SAAS,EAAC,MAAM;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACnB9D,KAAA,CAAAuD,aAAA;IACEQ,IAAI,EAAC,MAAM;IACXC,QAAQ,EAAElD,gBAAiB;IAC3BmD,MAAM,EAAC,SAAS;IAChBT,SAAS,EAAC,MAAM;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACjB,CAAC,EAEDxD,OAAO,iBACNN,KAAA,CAAAuD,aAAA;IAAKC,SAAS,EAAC,MAAM;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACnB9D,KAAA,CAAAuD,aAAA;IAAKW,GAAG,EAAE5D,OAAQ;IAAC6D,GAAG,EAAC,SAAS;IAACX,SAAS,EAAC,+BAA+B;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CACzE,CACN,eAED9D,KAAA,CAAAuD,aAAA;IACEa,OAAO,EAAE5C,YAAa;IACtB6C,QAAQ,EAAE,CAACjE,YAAY,IAAIM,OAAQ;IACnC8C,SAAS,EAAE,wBACT,CAACpD,YAAY,IAAIM,OAAO,GACpB,gCAAgC,GAChC,0CAA0C,EAC7C;IAAA+C,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAEFpD,OAAO,GAAG,cAAc,GAAG,eACtB,CACL,CAAC,EAELE,KAAK,iBACJZ,KAAA,CAAAuD,aAAA;IAAKC,SAAS,EAAC,mBAAmB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAElD,KAAW,CAChD,EAEAJ,IAAI,CAAC8D,MAAM,GAAG,CAAC,iBACdtE,KAAA,CAAAuD,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACE9D,KAAA,CAAAuD,aAAA;IAAIC,SAAS,EAAC,4BAA4B;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,kBAAoB,CAAC,eAChE9D,KAAA,CAAAuD,aAAA;IAAKC,SAAS,EAAC,sDAAsD;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAClEtD,IAAI,CAACkC,GAAG,CAAC,CAACC,GAAG,EAAE4B,KAAK,kBACnBvE,KAAA,CAAAuD,aAAA;IACEiB,GAAG,EAAED,KAAM;IACXf,SAAS,EAAC,8DAA8D;IACxEiB,KAAK,EAAE;MACLC,OAAO,EAAE3B,IAAI,CAAC4B,GAAG,CAAC,GAAG,EAAEhC,GAAG,CAACG,UAAU,GAAG,GAAG;IAC7C,CAAE;IAAAW,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAEF9D,KAAA,CAAAuD,aAAA;IAAMC,SAAS,EAAC,aAAa;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAEnB,GAAG,CAACC,IAAW,CAAC,eAC/C5C,KAAA,CAAAuD,aAAA;IAAMC,SAAS,EAAC,uBAAuB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAEnB,GAAG,CAACG,UAAU,EAAC,GAAO,CAC5D,CACN,CACE,CACF,CAEJ,CAAC;AAEV;AAEA,eAAe3C,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module"}