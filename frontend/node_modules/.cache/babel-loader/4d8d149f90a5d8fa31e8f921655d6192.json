{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\karti\\\\OneDrive\\\\Desktop\\\\Web D Try\\\\c++ oops\\\\imagga-analyzer\\\\frontend\\\\src\\\\App.js\";\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './App.css';\nfunction App() {\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [preview, setPreview] = useState(null);\n  const [tags, setTags] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const handleFileSelect = event => {\n    const file = event.target.files[0];\n    setSelectedFile(file);\n\n    // Create preview\n    if (file) {\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        setPreview(reader.result);\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n  const handleUpload = async () => {\n    if (!selectedFile) {\n      setError('Please select an image first');\n      return;\n    }\n    setLoading(true);\n    setError(null);\n    const formData = new FormData();\n    formData.append('image', selectedFile);\n    try {\n      const response = await axios.post('http://localhost:5000/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      setTags(response.data.tags);\n    } catch (err) {\n      setError('Failed to analyze image. Please try again.');\n      console.error('Error:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const renderTags = () => {\n    // Sort tags by confidence\n    const sortedTags = [...tags].sort((a, b) => {\n      const confidenceA = parseFloat(a.match(/\\((\\d+)%\\)/)[1]);\n      const confidenceB = parseFloat(b.match(/\\((\\d+)%\\)/)[1]);\n      return confidenceB - confidenceA;\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }\n    }, sortedTags.map((tag, index) => {\n      const [tagName, confidence] = tag.match(/(.+?)\\s*\\((\\d+)%\\)/).slice(1);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: index,\n        className: \"bg-gray-100 p-2 rounded-lg flex justify-between items-center\",\n        style: {\n          opacity: Math.max(0.5, parseInt(confidence) / 100)\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"font-medium\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 15\n        }\n      }, tagName.trim()), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"text-sm text-gray-600\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 15\n        }\n      }, confidence, \"%\"));\n    }));\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container mx-auto p-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"text-3xl font-bold mb-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, \"Image Analysis\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    onChange: handleFileSelect,\n    accept: \"image/*\",\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }), preview && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: preview,\n    alt: \"Preview\",\n    className: \"max-w-md rounded-lg shadow-lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleUpload,\n    disabled: !selectedFile || loading,\n    className: `px-4 py-2 rounded-lg ${!selectedFile || loading ? 'bg-gray-300 cursor-not-allowed' : 'bg-blue-500 hover:bg-blue-600 text-white'}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, loading ? 'Analyzing...' : 'Analyze Image')), error && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-red-500 mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }, error), tags.length > 0 && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"text-xl font-semibold mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 11\n    }\n  }, \"Analysis Results\"), renderTags()));\n}\nexport default App;","map":{"version":3,"names":["React","useState","axios","App","selectedFile","setSelectedFile","preview","setPreview","tags","setTags","loading","setLoading","error","setError","handleFileSelect","event","file","target","files","reader","FileReader","onloadend","result","readAsDataURL","handleUpload","formData","FormData","append","response","post","headers","data","err","console","renderTags","sortedTags","sort","a","b","confidenceA","parseFloat","match","confidenceB","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","map","tag","index","tagName","confidence","slice","key","style","opacity","Math","max","parseInt","trim","type","onChange","accept","src","alt","onClick","disabled","length"],"sources":["C:/Users/karti/OneDrive/Desktop/Web D Try/c++ oops/imagga-analyzer/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport './App.css';\n\nfunction App() {\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [preview, setPreview] = useState(null);\n  const [tags, setTags] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const handleFileSelect = (event) => {\n    const file = event.target.files[0];\n    setSelectedFile(file);\n    \n    // Create preview\n    if (file) {\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        setPreview(reader.result);\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n\n  const handleUpload = async () => {\n    if (!selectedFile) {\n      setError('Please select an image first');\n      return;\n    }\n\n    setLoading(true);\n    setError(null);\n    \n    const formData = new FormData();\n    formData.append('image', selectedFile);\n\n    try {\n      const response = await axios.post('http://localhost:5000/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n      });\n\n      setTags(response.data.tags);\n    } catch (err) {\n      setError('Failed to analyze image. Please try again.');\n      console.error('Error:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const renderTags = () => {\n    // Sort tags by confidence\n    const sortedTags = [...tags].sort((a, b) => {\n      const confidenceA = parseFloat(a.match(/\\((\\d+)%\\)/)[1]);\n      const confidenceB = parseFloat(b.match(/\\((\\d+)%\\)/)[1]);\n      return confidenceB - confidenceA;\n    });\n\n    return (\n      <div className=\"grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-2\">\n        {sortedTags.map((tag, index) => {\n          const [tagName, confidence] = tag.match(/(.+?)\\s*\\((\\d+)%\\)/).slice(1);\n          return (\n            <div \n              key={index} \n              className=\"bg-gray-100 p-2 rounded-lg flex justify-between items-center\"\n              style={{\n                opacity: Math.max(0.5, parseInt(confidence) / 100)\n              }}\n            >\n              <span className=\"font-medium\">{tagName.trim()}</span>\n              <span className=\"text-sm text-gray-600\">{confidence}%</span>\n            </div>\n          );\n        })}\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"container mx-auto p-4\">\n      <h1 className=\"text-3xl font-bold mb-6\">Image Analysis</h1>\n      \n      <div className=\"mb-6\">\n        <input\n          type=\"file\"\n          onChange={handleFileSelect}\n          accept=\"image/*\"\n          className=\"mb-4\"\n        />\n        \n        {preview && (\n          <div className=\"mb-4\">\n            <img src={preview} alt=\"Preview\" className=\"max-w-md rounded-lg shadow-lg\" />\n          </div>\n        )}\n        \n        <button\n          onClick={handleUpload}\n          disabled={!selectedFile || loading}\n          className={`px-4 py-2 rounded-lg ${\n            !selectedFile || loading\n              ? 'bg-gray-300 cursor-not-allowed'\n              : 'bg-blue-500 hover:bg-blue-600 text-white'\n          }`}\n        >\n          {loading ? 'Analyzing...' : 'Analyze Image'}\n        </button>\n      </div>\n\n      {error && (\n        <div className=\"text-red-500 mb-4\">{error}</div>\n      )}\n\n      {tags.length > 0 && (\n        <div>\n          <h2 className=\"text-xl font-semibold mb-4\">Analysis Results</h2>\n          {renderTags()}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}